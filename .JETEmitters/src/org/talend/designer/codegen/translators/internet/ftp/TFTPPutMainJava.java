package org.talend.designer.codegen.translators.internet.ftp;

import org.talend.core.model.process.INode;
import org.talend.core.model.process.ElementParameterParser;
import org.talend.designer.codegen.config.CodeGeneratorArgument;
import java.util.List;

public class TFTPPutMainJava
{
  protected static String nl;
  public static synchronized TFTPPutMainJava create(String lineSeparator)
  {
    nl = lineSeparator;
    TFTPPutMainJava result = new TFTPPutMainJava();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = NL + "try{";
  protected final String TEXT_3 = NL + "\t\tglobalMap.put(\"";
  protected final String TEXT_4 = "_CURRENT_STATUS\", \"No file transfered.\");" + NL + "   \t\tjava.util.Set<String> keySet";
  protected final String TEXT_5 = " = map";
  protected final String TEXT_6 = ".keySet();" + NL + "      \tfor (String key";
  protected final String TEXT_7 = " : keySet";
  protected final String TEXT_8 = "){" + NL + "\t\t\tif(key";
  protected final String TEXT_9 = " == null || \"\".equals(key";
  protected final String TEXT_10 = ")){" + NL + "\t\t\t\t";
  protected final String TEXT_11 = NL + "\t\t\t\t\tlog.error(\"";
  protected final String TEXT_12 = " - file name invalid!\");" + NL + "\t\t\t\t";
  protected final String TEXT_13 = NL + "\t\t\t\tSystem.err.println(\"file name invalid!\");" + NL + "\t\t\t\tcontinue;" + NL + "\t\t\t}" + NL + "\t\t\tString tempdir";
  protected final String TEXT_14 = " =  localdir";
  protected final String TEXT_15 = ";" + NL + "\t\t\tString filemask";
  protected final String TEXT_16 = " = key";
  protected final String TEXT_17 = "; " + NL + "\t\t\tString dir";
  protected final String TEXT_18 = " = null;\t" + NL + "        \t";
  protected final String TEXT_19 = NL + "                String mask";
  protected final String TEXT_20 = " = filemask";
  protected final String TEXT_21 = ".replaceAll(\"\\\\\\\\\", \"/\") ;";
  protected final String TEXT_22 = NL + "                String mask";
  protected final String TEXT_23 = " = filemask";
  protected final String TEXT_24 = ";";
  protected final String TEXT_25 = "\t" + NL + "\t\t\tint i";
  protected final String TEXT_26 = " = mask";
  protected final String TEXT_27 = ".lastIndexOf('/');" + NL + "  \t\t\tif (i";
  protected final String TEXT_28 = "!=-1){" + NL + "\t\t\t\tdir";
  protected final String TEXT_29 = " = mask";
  protected final String TEXT_30 = ".substring(0, i";
  protected final String TEXT_31 = "); " + NL + "\t\t\t\tmask";
  protected final String TEXT_32 = " = mask";
  protected final String TEXT_33 = ".substring(i";
  protected final String TEXT_34 = "+1);\t " + NL + "    \t\t}" + NL + "    \t\tif (dir";
  protected final String TEXT_35 = "!=null && !\"\".equals(dir";
  protected final String TEXT_36 = ")) tempdir";
  protected final String TEXT_37 = " = tempdir";
  protected final String TEXT_38 = " + \"/\" + dir";
  protected final String TEXT_39 = ";" + NL + "    \t\t";
  protected final String TEXT_40 = NL + "\t\t\t\tmask";
  protected final String TEXT_41 = " = mask";
  protected final String TEXT_42 = ".replaceAll(\"\\\\.\", \"\\\\\\\\.\").replaceAll(\"\\\\*\", \".*\");" + NL + "    \t\t";
  protected final String TEXT_43 = NL + "    \t\tfinal String finalMask";
  protected final String TEXT_44 = " = mask";
  protected final String TEXT_45 = ";" + NL + "    \t\tjava.io.File[] listings";
  protected final String TEXT_46 = " = null;       " + NL + "        \tjava.io.File file";
  protected final String TEXT_47 = " = new java.io.File(tempdir";
  protected final String TEXT_48 = ");" + NL + "        \tif (file";
  protected final String TEXT_49 = ".isDirectory()) {" + NL + "\t            listings";
  protected final String TEXT_50 = " = file";
  protected final String TEXT_51 = ".listFiles(new java.io.FileFilter() {" + NL + "\t                public boolean accept(java.io.File pathname) {" + NL + "\t                    boolean result = false;" + NL + "\t                    if (pathname != null && pathname.isFile()) {                      " + NL + "\t                            result = java.util.regex.Pattern.compile(finalMask";
  protected final String TEXT_52 = ").matcher(pathname.getName()).find(); " + NL + "\t                    \t}" + NL + "\t                    return result;" + NL + "\t                }" + NL + "\t            });" + NL + "        \t} " + NL + "\t    \tif(listings";
  protected final String TEXT_53 = " != null && listings";
  protected final String TEXT_54 = ".length > 0){" + NL + "\t    \t\tfor (int m";
  protected final String TEXT_55 = " = 0; m";
  protected final String TEXT_56 = " < listings";
  protected final String TEXT_57 = ".length; m";
  protected final String TEXT_58 = "++){ " + NL + "\t     \t\t\tif (listings";
  protected final String TEXT_59 = "[m";
  protected final String TEXT_60 = "].getName().matches(mask";
  protected final String TEXT_61 = ")){     " + NL + "\t      \t\t\t\t" + NL + "\t\t      \t\t\t";
  protected final String TEXT_62 = "    \t\t\t" + NL + "\t\t    \t\t\tint mode";
  protected final String TEXT_63 = " = com.jcraft.jsch.ChannelSftp.OVERWRITE;" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_64 = NL + "\t\t\t\t\t\tint mode";
  protected final String TEXT_65 = " = com.jcraft.jsch.ChannelSftp.APPEND;" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_66 = NL + "\t\t\t\t\t\tint mode";
  protected final String TEXT_67 = " = com.jcraft.jsch.ChannelSftp.RESUME;" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_68 = NL + "\t\t\t\t\t\ttry{" + NL + "\t\t    \t\t\t\tc_";
  protected final String TEXT_69 = ".put(listings";
  protected final String TEXT_70 = "[m";
  protected final String TEXT_71 = "].getAbsolutePath(), ";
  protected final String TEXT_72 = ", monitor";
  protected final String TEXT_73 = ", mode";
  protected final String TEXT_74 = ");" + NL + "\t\t    \t\t\t\t " + NL + "\t\t    \t\t\t\t// add info to list will return" + NL + "\t\t    \t\t\t\tmsg_";
  protected final String TEXT_75 = ".add(\"file: \" + listings";
  protected final String TEXT_76 = "[m";
  protected final String TEXT_77 = "].getAbsolutePath() + \", size: \"" + NL + "\t\t                    \t+ listings";
  protected final String TEXT_78 = "[m";
  protected final String TEXT_79 = "].length() + \" bytes upload successfully\");" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_80 = NL + "\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_81 = " - Uploaded file '\" + listings";
  protected final String TEXT_82 = "[m";
  protected final String TEXT_83 = "].getName() + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_84 = NL + "\t\t    \t\t\t\tglobalMap.put(\"";
  protected final String TEXT_85 = "_CURRENT_STATUS\", \"File transfer OK.\");" + NL + "\t\t    \t\t\t\tif(c_";
  protected final String TEXT_86 = ".stat(";
  protected final String TEXT_87 = "+\"/\"+listings";
  protected final String TEXT_88 = "[m";
  protected final String TEXT_89 = "].getName()).getAtimeString() != null){" + NL + "\t\t    \t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_90 = "_CURRENT_FILE_EXISTS\",true);" + NL + "\t\t    \t\t\t\t}" + NL + "\t\t    \t\t\t}catch(com.jcraft.jsch.SftpException e_";
  protected final String TEXT_91 = ") {" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_92 = NL + "\t\t\t\t\t\t\t\tlog.error(\"";
  protected final String TEXT_93 = " - File transfer fail.\"+e_";
  protected final String TEXT_94 = ".getMessage());" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_95 = NL + "\t\t                \tglobalMap.put(\"";
  protected final String TEXT_96 = "_CURRENT_STATUS\", \"File transfer fail.\");" + NL + "\t\t                \tif(c_";
  protected final String TEXT_97 = ".stat(";
  protected final String TEXT_98 = "+\"/\"+listings";
  protected final String TEXT_99 = "[m";
  protected final String TEXT_100 = "].getName()).getAtimeString() != null){" + NL + "\t\t                \t\tglobalMap.put(\"";
  protected final String TEXT_101 = "_CURRENT_FILE_EXISTS\",true);" + NL + "\t\t                \t}" + NL + "\t\t            ";
  protected final String TEXT_102 = NL + "           \t\t\t\t\tthrow(e_";
  protected final String TEXT_103 = ");" + NL + "\t\t\t\t\t";
  protected final String TEXT_104 = NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_105 = NL + "\t\t\t\t\t\t\t\tlog.error(\"";
  protected final String TEXT_106 = " - File permission denied: \"+";
  protected final String TEXT_107 = "+\"/\"+listings";
  protected final String TEXT_108 = "[m";
  protected final String TEXT_109 = "].getName());" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_110 = NL + "\t\t\t\t\t\t\tSystem.err.println(\"File permission denied: \"+";
  protected final String TEXT_111 = "+\"/\"+listings";
  protected final String TEXT_112 = "[m";
  protected final String TEXT_113 = "].getName());" + NL + "\t\t\t\t\t";
  protected final String TEXT_114 = "     " + NL + "\t\t                }catch(java.lang.Exception e_";
  protected final String TEXT_115 = "){" + NL + "\t\t                   if(!(e_";
  protected final String TEXT_116 = " instanceof com.jcraft.jsch.SftpException)) {" + NL + "\t\t                \t\tmsg_";
  protected final String TEXT_117 = ".add(\"file \" + listings";
  protected final String TEXT_118 = "[m";
  protected final String TEXT_119 = "].getAbsolutePath() + \" not found?\");" + NL + "\t\t                   \t\t" + NL + "\t\t                \t\tglobalMap.put(\"";
  protected final String TEXT_120 = "_CURRENT_FILE_EXISTS\",false);" + NL + "\t\t                \t}" + NL + "\t\t                   \tthrow e_";
  protected final String TEXT_121 = ";" + NL + "\t\t                }" + NL + "\t\t\t\t\t\tnb_file_";
  protected final String TEXT_122 = "++;" + NL + "\t      \t\t\t}" + NL + "\t    \t\t}" + NL + "\t    \t}else{" + NL + "\t\t\t\t";
  protected final String TEXT_123 = NL + "\t\t\t\t\tlog.error(\"";
  protected final String TEXT_124 = " - No match file exist!\");" + NL + "\t\t\t\t";
  protected final String TEXT_125 = NL + "\t    \t\tSystem.err.println(\"No match file exist!\");" + NL + "\t    \t}" + NL + "\t    \t" + NL + "\t    \t//do rename" + NL + "\t    \tif(map";
  protected final String TEXT_126 = ".get(key";
  protected final String TEXT_127 = ") != \"\" && key";
  protected final String TEXT_128 = " != map";
  protected final String TEXT_129 = ".get(key";
  protected final String TEXT_130 = ")){" + NL + "\t    \t\t";
  protected final String TEXT_131 = NL + "\t\t         \ttry{" + NL + "\t\t          \t\tc_";
  protected final String TEXT_132 = ".rm(";
  protected final String TEXT_133 = "+\"/\"+map";
  protected final String TEXT_134 = ".get(key";
  protected final String TEXT_135 = "));" + NL + "\t\t         \t}catch(com.jcraft.jsch.SftpException e_";
  protected final String TEXT_136 = "){" + NL + "\t\t         \t}" + NL + "\t\t        ";
  protected final String TEXT_137 = NL + "\t\t    \ttry{" + NL + "\t\t   \t\t\tc_";
  protected final String TEXT_138 = ".rename(";
  protected final String TEXT_139 = "+\"/\"+key";
  protected final String TEXT_140 = ", ";
  protected final String TEXT_141 = "+\"/\"+map";
  protected final String TEXT_142 = ".get(key";
  protected final String TEXT_143 = "));" + NL + "\t\t   \t\t\tglobalMap.put(\"";
  protected final String TEXT_144 = "_CURRENT_STATUS\", \"File rename OK.\");" + NL + "\t\t   \t\t}catch(com.jcraft.jsch.SftpException e_";
  protected final String TEXT_145 = "){" + NL + "\t\t   \t\t\tglobalMap.put(\"";
  protected final String TEXT_146 = "_CURRENT_STATUS\", \"File rename fail.\");" + NL + "\t\t   \t\t\tthrow e_";
  protected final String TEXT_147 = ";" + NL + "\t   \t\t\t}" + NL + "   \t\t\t}  " + NL + "\t    }" + NL + NL;
  protected final String TEXT_148 = NL + NL + "\t\tString currentStatus_";
  protected final String TEXT_149 = " = \"No file transfered.\";" + NL + "   \t\tjava.util.Set<String> keySet";
  protected final String TEXT_150 = " = map";
  protected final String TEXT_151 = ".keySet();" + NL + "      \tfor (String key";
  protected final String TEXT_152 = " : keySet";
  protected final String TEXT_153 = "){" + NL + "      \t\tif(key";
  protected final String TEXT_154 = " == null || \"\".equals(key";
  protected final String TEXT_155 = ")){" + NL + "\t\t\t\tSystem.err.println(\"file name invalid!\");" + NL + "\t\t\t\t";
  protected final String TEXT_156 = NL + "\t\t\t\t\tlog.error(\"";
  protected final String TEXT_157 = " - file name invalid!\");" + NL + "\t\t\t\t";
  protected final String TEXT_158 = NL + "\t\t\t\tcontinue;" + NL + "\t\t\t}    " + NL + "\t\t\tString tempdir";
  protected final String TEXT_159 = " =  localdir";
  protected final String TEXT_160 = ";" + NL + "\t\t\tString filemask";
  protected final String TEXT_161 = " = key";
  protected final String TEXT_162 = "; " + NL + "\t\t\tString dir";
  protected final String TEXT_163 = " = null;\t" + NL + "\t\t    ";
  protected final String TEXT_164 = NL + "                String mask";
  protected final String TEXT_165 = " = filemask";
  protected final String TEXT_166 = ".replaceAll(\"\\\\\\\\\", \"/\") ;";
  protected final String TEXT_167 = NL + "                String mask";
  protected final String TEXT_168 = " = filemask";
  protected final String TEXT_169 = ";";
  protected final String TEXT_170 = "\t" + NL + "\t\t\tint i";
  protected final String TEXT_171 = " = mask";
  protected final String TEXT_172 = ".lastIndexOf('/');" + NL + "  \t\t\tif (i";
  protected final String TEXT_173 = "!=-1){" + NL + "\t\t\t\tdir";
  protected final String TEXT_174 = " = mask";
  protected final String TEXT_175 = ".substring(0, i";
  protected final String TEXT_176 = "); " + NL + "\t\t\t\tmask";
  protected final String TEXT_177 = " = mask";
  protected final String TEXT_178 = ".substring(i";
  protected final String TEXT_179 = "+1);\t " + NL + "    \t\t}" + NL + "    \t\tif (dir";
  protected final String TEXT_180 = "!=null && !\"\".equals(dir";
  protected final String TEXT_181 = ")) tempdir";
  protected final String TEXT_182 = " = tempdir";
  protected final String TEXT_183 = " + \"/\" + dir";
  protected final String TEXT_184 = ";  " + NL + "\t\t    ";
  protected final String TEXT_185 = NL + "\t    \t\tmask";
  protected final String TEXT_186 = " = mask";
  protected final String TEXT_187 = ".replaceAll(\"\\\\.\", \"\\\\\\\\.\").replaceAll(\"\\\\*\", \".*\");" + NL + "\t    \t";
  protected final String TEXT_188 = NL + "    \t\tfinal String finalMask";
  protected final String TEXT_189 = " = mask";
  protected final String TEXT_190 = ";" + NL + "    \t\tjava.io.File[] listings";
  protected final String TEXT_191 = " = null;       " + NL + "        \tjava.io.File file";
  protected final String TEXT_192 = " = new java.io.File(tempdir";
  protected final String TEXT_193 = ");" + NL + "        \tif (file";
  protected final String TEXT_194 = ".isDirectory()) {" + NL + "\t            listings";
  protected final String TEXT_195 = " = file";
  protected final String TEXT_196 = ".listFiles(new java.io.FileFilter() {" + NL + "\t                public boolean accept(java.io.File pathname) {" + NL + "\t                    boolean result = false;" + NL + "\t                    if (pathname != null && pathname.isFile()) {                      " + NL + "\t                            result = java.util.regex.Pattern.compile(finalMask";
  protected final String TEXT_197 = ").matcher(pathname.getName()).find(); " + NL + "\t                    \t}" + NL + "\t                    return result;" + NL + "\t                \t}" + NL + "\t            \t});" + NL + "        \t}";
  protected final String TEXT_198 = NL + "\t        java.util.List<String> remoteExistsFiles_";
  protected final String TEXT_199 = " = new java.util.ArrayList<String>();" + NL + "\t        \t" + NL + "\t\t\tcom.enterprisedt.net.ftp.FTPFile[] ftpFiles_";
  protected final String TEXT_200 = " = ftp_";
  protected final String TEXT_201 = ".dirDetails(\".\");" + NL + "\t\t\tfor (com.enterprisedt.net.ftp.FTPFile ftpFile : ftpFiles_";
  protected final String TEXT_202 = ") {" + NL + "\t\t\t\tif (!ftpFile.isDir() && !ftpFile.isLink()) {" + NL + "\t\t\t\t\tif(\"\".equals(map";
  protected final String TEXT_203 = ".get(key";
  protected final String TEXT_204 = "))){" + NL + "\t\t\t\t\t\tif (ftpFile.getName().matches(mask";
  protected final String TEXT_205 = ")) {\t\t " + NL + "\t\t\t\t\t\t\tremoteExistsFiles_";
  protected final String TEXT_206 = ".add(ftpFile.getName());" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}else{" + NL + "\t\t\t\t\t\tif (ftpFile.getName().matches(map";
  protected final String TEXT_207 = ".get(key";
  protected final String TEXT_208 = "))) {\t\t " + NL + "\t\t\t\t\t\t\tremoteExistsFiles_";
  protected final String TEXT_209 = ".add(ftpFile.getName());" + NL + "\t\t\t\t\t\t}" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t    \tif(listings";
  protected final String TEXT_210 = " != null && listings";
  protected final String TEXT_211 = ".length > 0){" + NL + "\t    \t\tfor (int m";
  protected final String TEXT_212 = " = 0; m";
  protected final String TEXT_213 = " < listings";
  protected final String TEXT_214 = ".length; m";
  protected final String TEXT_215 = "++){ " + NL + "\t\t     \t\ttry{" + NL + "\t\t      \t\t\tif (listings";
  protected final String TEXT_216 = "[m";
  protected final String TEXT_217 = "].getName().matches(mask";
  protected final String TEXT_218 = ")){   " + NL + "\t\t\t\t\t\t\tjava.io.File file_in_localDir = listings";
  protected final String TEXT_219 = "[m";
  protected final String TEXT_220 = "];" + NL + "\t\t\t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_221 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_222 = ".contains(file_in_localDir.getName())); " + NL + "\t\t\t\t\t\t\tString newName_";
  protected final String TEXT_223 = " = (\"\".equals(map";
  protected final String TEXT_224 = ".get(key";
  protected final String TEXT_225 = ")))?file_in_localDir.getName():map";
  protected final String TEXT_226 = ".get(key";
  protected final String TEXT_227 = ");" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_228 = NL + "\t\t\t\t\t\t\tftp_";
  protected final String TEXT_229 = ".put(tempdir";
  protected final String TEXT_230 = " + \"/\" + file_in_localDir.getName(),\"\".equals(newName_";
  protected final String TEXT_231 = ")?file_in_localDir.getName():newName_";
  protected final String TEXT_232 = ", true);" + NL + "\t\t\t\t\t\t\t\t \t" + NL + "\t\t\t\t\t\t \t// add uploading status to list which will return back to client." + NL + "\t\t\t\t\t\t \tmsg_";
  protected final String TEXT_233 = ".add(\"file: \" + file_in_localDir.getAbsolutePath() + \", size: \"" + NL + "\t                                        + file_in_localDir.length() + \" bytes upload successfully\");" + NL + "\t\t\t\t\t\t\t\t \t" + NL + "\t\t\t\t\t\t \tcurrentStatus_";
  protected final String TEXT_234 = " = \"File rename OK.\";" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_235 = NL + "\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_236 = " - Uploaded file '\" + listings";
  protected final String TEXT_237 = "[m";
  protected final String TEXT_238 = "].getName() + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_239 = NL + "\t        \t\t\t\tglobalMap.put(\"";
  protected final String TEXT_240 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_241 = ".contains(file_in_localDir.getName()));" + NL + "\t\t            \t\t\t\t" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_242 = NL + "\t\t            \t\tif (!(remoteExistsFiles_";
  protected final String TEXT_243 = ".contains(newName_";
  protected final String TEXT_244 = "))){" + NL + "\t        \t\t\t\t\tftp_";
  protected final String TEXT_245 = ".put(tempdir";
  protected final String TEXT_246 = " + \"/\" + file_in_localDir.getName(),newName_";
  protected final String TEXT_247 = ");" + NL + "\t        \t\t\t\t\t" + NL + "\t        \t\t\t\t\t// add uploading status to list which will return back to client." + NL + "\t\t\t\t\t\t \t\tmsg_";
  protected final String TEXT_248 = ".add(\"file: \" + file_in_localDir.getAbsolutePath() + \", size: \"" + NL + "\t                                        + file_in_localDir.length() + \" bytes upload successfully\"); " + NL + "\t                            " + NL + "\t        \t\t\t\t\tcurrentStatus_";
  protected final String TEXT_249 = " = \"File rename OK.\";" + NL + "\t\t\t\t\t\t\t\t";
  protected final String TEXT_250 = NL + "\t\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_251 = " - Uploaded file '\" + listings";
  protected final String TEXT_252 = "[m";
  protected final String TEXT_253 = "].getName() + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t\t";
  protected final String TEXT_254 = NL + "\t        \t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_255 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_256 = ".contains(newName_";
  protected final String TEXT_257 = "));" + NL + "\t\t            \t\t}" + NL + "\t\t            \t\t";
  protected final String TEXT_258 = NL + "\t        \t\t\t\tftp_";
  protected final String TEXT_259 = ".put(tempdir";
  protected final String TEXT_260 = " + \"/\" + file_in_localDir.getName(),newName_";
  protected final String TEXT_261 = ");" + NL + "\t        \t\t\t\t " + NL + "\t        \t\t\t\t// add uploading status to list which will return back to client." + NL + "\t\t\t\t\t\t \tmsg_";
  protected final String TEXT_262 = ".add(\"file: \" + file_in_localDir.getAbsolutePath() + \", size: \"" + NL + "\t                                        + file_in_localDir.length() + \" bytes upload successfully\"); " + NL + "\t                        " + NL + "\t        \t\t\t\tcurrentStatus_";
  protected final String TEXT_263 = " = \"File rename OK.\";" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_264 = NL + "\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_265 = " - Uploaded file '\" + listings";
  protected final String TEXT_266 = "[m";
  protected final String TEXT_267 = "].getName() + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_268 = NL + "\t\t\t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_269 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_270 = ".contains(newName_";
  protected final String TEXT_271 = "));" + NL + "\t\t            \t\t\t\t " + NL + "\t\t            \t\t";
  protected final String TEXT_272 = NL + "\t\t            \t\tif ((remoteExistsFiles_";
  protected final String TEXT_273 = ".contains(newName_";
  protected final String TEXT_274 = "))){" + NL + "\t\t    \t\t\t\t\tcom.enterprisedt.net.ftp.FTPFile ftpfile";
  protected final String TEXT_275 = "=ftp_";
  protected final String TEXT_276 = ".fileDetails(newName_";
  protected final String TEXT_277 = ");" + NL + "\t\t\t\t\t\t\t\tlong ftpSize";
  protected final String TEXT_278 = "=ftpfile";
  protected final String TEXT_279 = ".size();" + NL + "\t\t\t\t\t\t\t\tlong localSize";
  protected final String TEXT_280 = "=file_in_localDir.length();" + NL + "\t\t\t\t\t\t\t\tif(!(ftpSize";
  protected final String TEXT_281 = "==localSize";
  protected final String TEXT_282 = ")){" + NL + "\t        \t\t\t\t\t\tftp_";
  protected final String TEXT_283 = ".put(tempdir";
  protected final String TEXT_284 = " + \"/\" + file_in_localDir.getName(),newName_";
  protected final String TEXT_285 = ");" + NL + "\t        \t\t\t\t\t\t" + NL + "\t        \t\t\t\t\t\t// add uploading status to list which will return back to client." + NL + "\t\t\t\t\t\t \t\t\tmsg_";
  protected final String TEXT_286 = ".add(\"file: \" + file_in_localDir.getAbsolutePath() + \", size: \"" + NL + "\t                                        \t+ file_in_localDir.length() + \" bytes upload successfully\"); " + NL + "\t                                        " + NL + "\t        \t\t\t\t\t\tcurrentStatus_";
  protected final String TEXT_287 = " = \"File rename OK.\";" + NL + "\t\t\t\t\t\t\t\t\t";
  protected final String TEXT_288 = NL + "\t\t\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_289 = " - Uploaded file '\" + listings";
  protected final String TEXT_290 = "[m";
  protected final String TEXT_291 = "].getName() + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t\t\t";
  protected final String TEXT_292 = NL + "\t        \t\t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_293 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_294 = ".contains(newName_";
  protected final String TEXT_295 = "));" + NL + "\t        \t\t\t\t\t}" + NL + "\t\t            \t\t}else{" + NL + "\t        \t\t\t\t\tftp_";
  protected final String TEXT_296 = ".put(tempdir";
  protected final String TEXT_297 = " + \"/\" + file_in_localDir.getName(),newName_";
  protected final String TEXT_298 = ");" + NL + "\t        \t\t\t\t\t" + NL + "\t        \t\t\t\t\t// add uploading status to list which will return back to client." + NL + "\t\t\t\t\t\t \t\tmsg_";
  protected final String TEXT_299 = ".add(\"file: \" + file_in_localDir.getAbsolutePath() + \", size: \"" + NL + "\t                                        + file_in_localDir.length() + \" bytes upload successfully\"); " + NL + "\t                                        " + NL + "\t        \t\t\t\t\tcurrentStatus_";
  protected final String TEXT_300 = " = \"File rename OK.\";" + NL + "\t\t\t\t\t\t\t\t";
  protected final String TEXT_301 = NL + "\t\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_302 = " - Uploaded file '\" + listings";
  protected final String TEXT_303 = "[m";
  protected final String TEXT_304 = "].getName() + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t\t";
  protected final String TEXT_305 = NL + "\t        \t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_306 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_307 = ".contains(file_in_localDir.getName()));" + NL + "\t\t            \t\t}" + NL + "\t\t            \t\t";
  protected final String TEXT_308 = NL + "\t\t            \t\tnb_file_";
  protected final String TEXT_309 = "++;" + NL + "\t\t      \t\t\t}" + NL + "\t\t      \t\t}catch(com.enterprisedt.net.ftp.FTPException e_";
  protected final String TEXT_310 = "){" + NL + "\t\t      \t\t\t\t" + NL + "\t  \t\t\t\t\tmsg_";
  protected final String TEXT_311 = ".add(\"file \" + listings";
  protected final String TEXT_312 = "[m";
  protected final String TEXT_313 = "].getAbsolutePath() + \" not found?\");" + NL + "\t  \t\t\t\t\t" + NL + "\t  \t\t\t\t\tcurrentStatus_";
  protected final String TEXT_314 = " = \"File rename fail.\";" + NL + "\t  \t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_315 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_316 = ".contains(listings";
  protected final String TEXT_317 = "[m";
  protected final String TEXT_318 = "].getName()));" + NL + "\t  \t\t\t\t\t" + NL + "\t  \t\t\t\t\tthrow e_";
  protected final String TEXT_319 = ";" + NL + "\t\t      \t\t}" + NL + "\t    \t\t}" + NL + "\t    \t}else{" + NL + "\t\t\t\t";
  protected final String TEXT_320 = NL + "\t\t\t\t\tlog.warn(\"";
  protected final String TEXT_321 = " - No match file exist!\");" + NL + "\t\t\t\t";
  protected final String TEXT_322 = NL + "\t    \t\tSystem.err.println(\"No match file exist!\");" + NL + "\t    \t}" + NL + "\t    \t  " + NL + "\t    }" + NL + "    \tglobalMap.put(\"";
  protected final String TEXT_323 = "_CURRENT_STATUS\", currentStatus_";
  protected final String TEXT_324 = ");" + NL + " ";
  protected final String TEXT_325 = NL + " \t\tString currentStatus_";
  protected final String TEXT_326 = " = \"No file transfered.\";" + NL + "\t\tglobalMap.put(\"";
  protected final String TEXT_327 = "_CURRENT_STATUS\", \"No file transfered.\");" + NL + "   \t\tjava.util.Set<String> keySet";
  protected final String TEXT_328 = " = map";
  protected final String TEXT_329 = ".keySet();" + NL + "\t\tboolean needRename_";
  protected final String TEXT_330 = " = false;" + NL + "      \tfor (String key";
  protected final String TEXT_331 = " : keySet";
  protected final String TEXT_332 = "){" + NL + "\t\t\tif(key";
  protected final String TEXT_333 = " == null || \"\".equals(key";
  protected final String TEXT_334 = ")){" + NL + "\t\t\t\t";
  protected final String TEXT_335 = NL + "\t\t\t\t\tlog.error(\"";
  protected final String TEXT_336 = " - file name invalid!\");" + NL + "\t\t\t\t";
  protected final String TEXT_337 = NL + "\t\t\t\tSystem.err.println(\"file name invalid!\");" + NL + "\t\t\t\tcontinue;" + NL + "\t\t\t}" + NL + "\t\t\tString tempdir";
  protected final String TEXT_338 = " =  localdir";
  protected final String TEXT_339 = ";" + NL + "\t\t\tString filemask";
  protected final String TEXT_340 = " = key";
  protected final String TEXT_341 = "; " + NL + "\t\t\tString dir";
  protected final String TEXT_342 = " = null;\t" + NL + "        \t";
  protected final String TEXT_343 = NL + "                String mask";
  protected final String TEXT_344 = " = filemask";
  protected final String TEXT_345 = ".replaceAll(\"\\\\\\\\\", \"/\") ;";
  protected final String TEXT_346 = NL + "                String mask";
  protected final String TEXT_347 = " = filemask";
  protected final String TEXT_348 = ";";
  protected final String TEXT_349 = "\t" + NL + "\t\t\tint i";
  protected final String TEXT_350 = " = mask";
  protected final String TEXT_351 = ".lastIndexOf('/');" + NL + "  \t\t\tif (i";
  protected final String TEXT_352 = "!=-1){" + NL + "\t\t\t\tdir";
  protected final String TEXT_353 = " = mask";
  protected final String TEXT_354 = ".substring(0, i";
  protected final String TEXT_355 = "); " + NL + "\t\t\t\tmask";
  protected final String TEXT_356 = " = mask";
  protected final String TEXT_357 = ".substring(i";
  protected final String TEXT_358 = "+1);\t " + NL + "    \t\t}" + NL + "    \t\tif (dir";
  protected final String TEXT_359 = "!=null && !\"\".equals(dir";
  protected final String TEXT_360 = ")) tempdir";
  protected final String TEXT_361 = " = tempdir";
  protected final String TEXT_362 = " + \"/\" + dir";
  protected final String TEXT_363 = ";" + NL + "    \t\t";
  protected final String TEXT_364 = NL + "\t\t\t\tmask";
  protected final String TEXT_365 = " = mask";
  protected final String TEXT_366 = ".replaceAll(\"\\\\.\", \"\\\\\\\\.\").replaceAll(\"\\\\*\", \".*\");" + NL + "    \t\t";
  protected final String TEXT_367 = NL + "    \t\tfinal String finalMask";
  protected final String TEXT_368 = " = mask";
  protected final String TEXT_369 = ";" + NL + "    \t\tjava.io.File[] listings";
  protected final String TEXT_370 = " = null;       " + NL + "        \tjava.io.File file";
  protected final String TEXT_371 = " = new java.io.File(tempdir";
  protected final String TEXT_372 = ");" + NL + "        \tif (file";
  protected final String TEXT_373 = ".isDirectory()) {" + NL + "\t            listings";
  protected final String TEXT_374 = " = file";
  protected final String TEXT_375 = ".listFiles(new java.io.FileFilter() {" + NL + "\t                public boolean accept(java.io.File pathname) {" + NL + "\t                    boolean result = false;" + NL + "\t                    if (pathname != null && pathname.isFile()) {                      " + NL + "\t                            result = java.util.regex.Pattern.compile(finalMask";
  protected final String TEXT_376 = ").matcher(pathname.getName()).find(); " + NL + "\t                    \t}" + NL + "\t                    return result;" + NL + "\t                }" + NL + "\t            });" + NL + "        \t}" + NL + "" + NL + "\t        java.util.List<String> remoteExistsFiles_";
  protected final String TEXT_377 = " = new java.util.ArrayList<String>();" + NL + "\t        \t" + NL + "\t\t\tString[] ftpFileNames_";
  protected final String TEXT_378 = " = ftp_";
  protected final String TEXT_379 = ".listNames();" + NL + "\t\t\tfor (String ftpFileName : ftpFileNames_";
  protected final String TEXT_380 = ") {" + NL + "\t\t\t\tif(\"\".equals(map";
  protected final String TEXT_381 = ".get(key";
  protected final String TEXT_382 = "))){" + NL + "\t\t\t\t\tif (ftpFileName.matches(mask";
  protected final String TEXT_383 = ")) {\t\t " + NL + "\t\t\t\t\t\tremoteExistsFiles_";
  protected final String TEXT_384 = ".add(ftpFileName);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}else{" + NL + "\t\t\t\t\tif (ftpFileName.matches(map";
  protected final String TEXT_385 = ".get(key";
  protected final String TEXT_386 = "))) {\t\t " + NL + "\t\t\t\t\t\tremoteExistsFiles_";
  protected final String TEXT_387 = ".add(ftpFileName);" + NL + "\t\t\t\t\t}" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\t" + NL + "\t\t\tif(listings";
  protected final String TEXT_388 = " != null && listings";
  protected final String TEXT_389 = ".length > 0){" + NL + "\t    \t\tfor (int m";
  protected final String TEXT_390 = " = 0; m";
  protected final String TEXT_391 = " < listings";
  protected final String TEXT_392 = ".length; m";
  protected final String TEXT_393 = "++){ " + NL + "\t     \t\t\tif (listings";
  protected final String TEXT_394 = "[m";
  protected final String TEXT_395 = "].getName().matches(mask";
  protected final String TEXT_396 = ")){   " + NL + "\t\t\t\t\t\tjava.io.File file_in_localDir_";
  protected final String TEXT_397 = " = listings";
  protected final String TEXT_398 = "[m";
  protected final String TEXT_399 = "];" + NL + "\t\t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_400 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_401 = ".contains(file_in_localDir_";
  protected final String TEXT_402 = ".getName())); " + NL + "\t\t\t\t\t\tString newName_";
  protected final String TEXT_403 = " = (\"\".equals(map";
  protected final String TEXT_404 = ".get(key";
  protected final String TEXT_405 = ")))?file_in_localDir_";
  protected final String TEXT_406 = ".getName():map";
  protected final String TEXT_407 = ".get(key";
  protected final String TEXT_408 = ");" + NL + "\t\t\t\t\t\t";
  protected final String TEXT_409 = NL + "\t\t            \t\tif (!(remoteExistsFiles_";
  protected final String TEXT_410 = ".contains(newName_";
  protected final String TEXT_411 = "))){" + NL + "\t\t\t            \t\tneedRename_";
  protected final String TEXT_412 = " = true;" + NL + "\t\t\t            \t\tftp_";
  protected final String TEXT_413 = ".upload(file_in_localDir_";
  protected final String TEXT_414 = ");" + NL + "\t\t\t\t\t\t\t\t";
  protected final String TEXT_415 = NL + "\t\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_416 = " - Uploaded file '\" + newName_";
  protected final String TEXT_417 = " + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t\t";
  protected final String TEXT_418 = NL + "\t        \t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_419 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_420 = ".contains(newName_";
  protected final String TEXT_421 = "));" + NL + "\t\t            \t\t}" + NL + "\t            \t\t";
  protected final String TEXT_422 = NL + "\t\t            \t\tneedRename_";
  protected final String TEXT_423 = " = true;" + NL + "\t\t            \t\tif ((remoteExistsFiles_";
  protected final String TEXT_424 = ".contains(newName_";
  protected final String TEXT_425 = "))){" + NL + "\t\t\t            \t\tftp_";
  protected final String TEXT_426 = ".deleteFile(newName_";
  protected final String TEXT_427 = ");" + NL + "\t\t            \t\t}" + NL + "\t        \t\t\t\tftp_";
  protected final String TEXT_428 = ".upload(file_in_localDir_";
  protected final String TEXT_429 = ");" + NL + "\t                        " + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_430 = NL + "\t\t\t\t\t\t\t\tlog.debug(\"";
  protected final String TEXT_431 = " - Overwrote file '\" + newName_";
  protected final String TEXT_432 = " + \"' successfully.\");" + NL + "\t\t\t\t\t\t\t";
  protected final String TEXT_433 = NL + "\t\t\t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_434 = "_CURRENT_FILE_EXISTS\", remoteExistsFiles_";
  protected final String TEXT_435 = ".contains(newName_";
  protected final String TEXT_436 = "));" + NL + "\t            \t\t\t\t " + NL + "\t            \t\t";
  protected final String TEXT_437 = NL + "\t            \t\tnb_file_";
  protected final String TEXT_438 = "++;" + NL + "\t      \t\t\t}" + NL + "\t      \t\t}" + NL + "\t    \t}else{" + NL + "\t\t\t\t";
  protected final String TEXT_439 = NL + "\t\t\t\t\tlog.error(\"";
  protected final String TEXT_440 = " - No match file exist!\");" + NL + "\t\t\t\t";
  protected final String TEXT_441 = NL + "\t    \t\tSystem.err.println(\"No match file exist!\");" + NL + "\t    \t}" + NL + "\t    \t" + NL + "\t    \t//do rename" + NL + "\t    \tif(map";
  protected final String TEXT_442 = ".get(key";
  protected final String TEXT_443 = ") != \"\" && key";
  protected final String TEXT_444 = " != map";
  protected final String TEXT_445 = ".get(key";
  protected final String TEXT_446 = ")){" + NL + "\t\t    \ttry{" + NL + "\t\t    \t\tif(needRename_";
  protected final String TEXT_447 = "){" + NL + "\t\t\t   \t\t\tftp_";
  protected final String TEXT_448 = ".rename(key";
  protected final String TEXT_449 = ", map";
  protected final String TEXT_450 = ".get(key";
  protected final String TEXT_451 = "));\t\t            \t\t" + NL + "\t\t   \t\t\t}" + NL + "\t\t   \t\t\tglobalMap.put(\"";
  protected final String TEXT_452 = "_CURRENT_STATUS\", \"File rename OK.\");" + NL + "\t\t   \t\t}catch(it.sauronsoftware.ftp4j.FTPException e_";
  protected final String TEXT_453 = "){" + NL + "   \t\t\t\t\tglobalMap.put(\"";
  protected final String TEXT_454 = "_CURRENT_STATUS\", \"File rename fail.\");" + NL + "\t\t   \t\t\tthrow e_";
  protected final String TEXT_455 = ";" + NL + "\t\t\t\t}" + NL + "\t\t\t}" + NL + "\t\t\tneedRename_";
  protected final String TEXT_456 = " = false;" + NL + "        } ";
  protected final String TEXT_457 = NL + " \t}catch(java.lang.Exception e_";
  protected final String TEXT_458 = "){";
  protected final String TEXT_459 = NL + "            throw(e_";
  protected final String TEXT_460 = ");";
  protected final String TEXT_461 = NL + "\t\t\t";
  protected final String TEXT_462 = NL + "\t\t\t\tlog.error(\"";
  protected final String TEXT_463 = " - \" + e_";
  protected final String TEXT_464 = ".getMessage());" + NL + "\t\t\t";
  protected final String TEXT_465 = NL + "\t\t\tSystem.err.print(e_";
  protected final String TEXT_466 = ".getMessage());";
  protected final String TEXT_467 = NL + "\t}";
  protected final String TEXT_468 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String localdir = ElementParameterParser.getValue(node, "__LOCALDIR__");
	String cid = node.getUniqueName();
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	String overwrite=ElementParameterParser.getValue(node, "__OVERWRITE__");
	String sftpoverwrite=ElementParameterParser.getValue(node, "__SFTPOVERWRITE__");
	String ftpsoverwrite=ElementParameterParser.getValue(node, "__FTPSOVERWRITE__");
	String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
	boolean append = ("true").equals(ElementParameterParser.getValue(node, "__APPEND__"));
	String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
	String useExistingConn = ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__");
	boolean sftp = false;
	boolean ftps = false; 
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	boolean useGlob = ("true").equals(ElementParameterParser.getValue(node, "__PERL5_REGEX__"));
	if(("true").equals(useExistingConn)){
		List<? extends INode> nodeList = node.getProcess().getGeneratingNodes();
		for(INode n : nodeList){
			if(n.getUniqueName().equals(connection)){
				sftp = ("true").equals(ElementParameterParser.getValue(n, "__SFTP__"));
      			ftps = ("true").equals(ElementParameterParser.getValue(n, "__FTPS__")); 
			}
		}
	}else{
		sftp = ("true").equals(ElementParameterParser.getValue(node, "__SFTP__"));
		ftps = ("true").equals(ElementParameterParser.getValue(node, "__FTPS__"));
	}

    stringBuffer.append(TEXT_2);
    
	if(sftp){ // *** sftp *** //

    stringBuffer.append(TEXT_3);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_4);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_5);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_6);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_7);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_8);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_9);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_10);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_11);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_12);
    }
    stringBuffer.append(TEXT_13);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_14);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_15);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_16);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_17);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_18);
    if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string
    stringBuffer.append(TEXT_19);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_20);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_21);
    } else {
    stringBuffer.append(TEXT_22);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_23);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_24);
    }
    stringBuffer.append(TEXT_25);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_26);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_27);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_28);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_29);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_30);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_31);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_32);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_33);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_34);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_35);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_36);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_37);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_38);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_39);
    if(!useGlob) {
    stringBuffer.append(TEXT_40);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_41);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_42);
    }
    stringBuffer.append(TEXT_43);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_44);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_45);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_46);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_47);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_48);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_49);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_50);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_51);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_52);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_53);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_54);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_55);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_56);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_57);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_58);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_59);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_60);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_61);
    if(("overwrite").equals(sftpoverwrite)){
    stringBuffer.append(TEXT_62);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_63);
    }else if(("append").equals(sftpoverwrite)){
    stringBuffer.append(TEXT_64);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_65);
    }else if(("resume").equals(sftpoverwrite)){
    stringBuffer.append(TEXT_66);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_67);
    }
    stringBuffer.append(TEXT_68);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_69);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_70);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_71);
    stringBuffer.append(remotedir);
    stringBuffer.append(TEXT_72);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_73);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_74);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_75);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_76);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_77);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_78);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_79);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_80);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_81);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_82);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_83);
    }
    stringBuffer.append(TEXT_84);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_85);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_86);
    stringBuffer.append(remotedir);
    stringBuffer.append(TEXT_87);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_88);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_89);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_90);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_91);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_92);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_93);
    stringBuffer.append( cid );
    stringBuffer.append(TEXT_94);
    }
    stringBuffer.append(TEXT_95);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_96);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_97);
    stringBuffer.append(remotedir);
    stringBuffer.append(TEXT_98);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_99);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_100);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_101);
    
        				if(("true").equals(dieOnError)){
					
    stringBuffer.append(TEXT_102);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_103);
    
						}else{
					
    stringBuffer.append(TEXT_104);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_105);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_106);
    stringBuffer.append(remotedir);
    stringBuffer.append(TEXT_107);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_108);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_109);
    }
    stringBuffer.append(TEXT_110);
    stringBuffer.append(remotedir);
    stringBuffer.append(TEXT_111);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_112);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_113);
    
						}
					
    stringBuffer.append(TEXT_114);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_115);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_116);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_117);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_118);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_119);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_120);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_121);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_122);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_123);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_124);
    }
    stringBuffer.append(TEXT_125);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_126);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_127);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_128);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_129);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_130);
    
        		if(("overwrite").equals(sftpoverwrite) || ("resume").equals(sftpoverwrite)){
		        
    stringBuffer.append(TEXT_131);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_132);
    stringBuffer.append(remotedir );
    stringBuffer.append(TEXT_133);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_134);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_135);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_136);
    
		        }
		        
    stringBuffer.append(TEXT_137);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_138);
    stringBuffer.append(remotedir );
    stringBuffer.append(TEXT_139);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_140);
    stringBuffer.append(remotedir );
    stringBuffer.append(TEXT_141);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_142);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_143);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_144);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_145);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_146);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_147);
    
	}else if (!ftps) { // *** ftp *** //

    stringBuffer.append(TEXT_148);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_149);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_150);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_151);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_152);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_153);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_154);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_155);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_156);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_157);
    }
    stringBuffer.append(TEXT_158);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_159);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_160);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_161);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_162);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_163);
    if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string
    stringBuffer.append(TEXT_164);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_165);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_166);
    } else {
    stringBuffer.append(TEXT_167);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_168);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_169);
    }
    stringBuffer.append(TEXT_170);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_171);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_172);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_173);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_174);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_175);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_176);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_177);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_178);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_179);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_180);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_181);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_182);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_183);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_184);
    if(!useGlob) {
    stringBuffer.append(TEXT_185);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_186);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_187);
    }
    stringBuffer.append(TEXT_188);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_189);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_190);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_191);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_192);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_193);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_194);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_195);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_196);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_197);
    
        // for a French FTP server, the 'exists' method available in the library that not works fine,
        // so add remote files fullname to a list then check whether the list contains or not instead of. 

    stringBuffer.append(TEXT_198);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_199);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_200);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_201);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_202);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_203);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_204);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_205);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_206);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_207);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_208);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_209);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_210);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_211);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_212);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_213);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_214);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_215);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_216);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_217);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_218);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_219);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_220);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_221);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_222);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_223);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_224);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_225);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_226);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_227);
    if(append){
    stringBuffer.append(TEXT_228);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_229);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_230);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_231);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_232);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_233);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_234);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_235);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_236);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_237);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_238);
    }
    stringBuffer.append(TEXT_239);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_240);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_241);
    }else if(("never").equals(overwrite)){
    stringBuffer.append(TEXT_242);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_243);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_244);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_245);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_246);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_247);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_248);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_249);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_250);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_251);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_252);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_253);
    }
    stringBuffer.append(TEXT_254);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_255);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_256);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_257);
    }else if(("always").equals(overwrite)){
    stringBuffer.append(TEXT_258);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_259);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_260);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_261);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_262);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_263);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_264);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_265);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_266);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_267);
    }
    stringBuffer.append(TEXT_268);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_269);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_270);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_271);
    }else if(("size_differ").equals(overwrite)){
    stringBuffer.append(TEXT_272);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_273);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_274);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_275);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_276);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_277);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_278);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_279);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_280);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_281);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_282);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_283);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_284);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_285);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_286);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_287);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_288);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_289);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_290);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_291);
    }
    stringBuffer.append(TEXT_292);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_293);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_294);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_295);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_296);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_297);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_298);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_299);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_300);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_301);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_302);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_303);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_304);
    }
    stringBuffer.append(TEXT_305);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_306);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_307);
    }
    stringBuffer.append(TEXT_308);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_309);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_310);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_311);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_312);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_313);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_314);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_315);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_316);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_317);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_318);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_319);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_320);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_321);
    }
    stringBuffer.append(TEXT_322);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_323);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_324);
    
 	}else{// *** ftps *** //

    stringBuffer.append(TEXT_325);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_326);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_327);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_328);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_329);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_330);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_331);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_332);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_333);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_334);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_335);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_336);
    }
    stringBuffer.append(TEXT_337);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_338);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_339);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_340);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_341);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_342);
    if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string
    stringBuffer.append(TEXT_343);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_344);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_345);
    } else {
    stringBuffer.append(TEXT_346);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_347);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_348);
    }
    stringBuffer.append(TEXT_349);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_350);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_351);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_352);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_353);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_354);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_355);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_356);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_357);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_358);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_359);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_360);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_361);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_362);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_363);
    if(!useGlob) {
    stringBuffer.append(TEXT_364);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_365);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_366);
    }
    stringBuffer.append(TEXT_367);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_368);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_369);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_370);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_371);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_372);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_373);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_374);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_375);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_376);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_377);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_378);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_379);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_380);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_381);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_382);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_383);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_384);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_385);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_386);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_387);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_388);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_389);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_390);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_391);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_392);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_393);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_394);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_395);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_396);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_397);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_398);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_399);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_400);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_401);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_402);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_403);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_404);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_405);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_406);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_407);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_408);
    if("never".equals(ftpsoverwrite)){
    stringBuffer.append(TEXT_409);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_410);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_411);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_412);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_413);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_414);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_415);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_416);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_417);
    }
    stringBuffer.append(TEXT_418);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_419);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_420);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_421);
    }else if("always".equals(ftpsoverwrite)){
    stringBuffer.append(TEXT_422);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_423);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_424);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_425);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_426);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_427);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_428);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_429);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_430);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_431);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_432);
    }
    stringBuffer.append(TEXT_433);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_434);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_435);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_436);
    }
    stringBuffer.append(TEXT_437);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_438);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_439);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_440);
    }
    stringBuffer.append(TEXT_441);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_442);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_443);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_444);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_445);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_446);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_447);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_448);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_449);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_450);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_451);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_452);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_453);
    stringBuffer.append(cid );
    stringBuffer.append(TEXT_454);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_455);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_456);
    }
    stringBuffer.append(TEXT_457);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_458);
    
        if(("true").equals(dieOnError)){

    stringBuffer.append(TEXT_459);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_460);
    
		}else{

    stringBuffer.append(TEXT_461);
    if(isLog4jEnabled){
    stringBuffer.append(TEXT_462);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_463);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_464);
    }
    stringBuffer.append(TEXT_465);
    stringBuffer.append(cid);
    stringBuffer.append(TEXT_466);
    
		}

    stringBuffer.append(TEXT_467);
    stringBuffer.append(TEXT_468);
    return stringBuffer.toString();
  }
}
